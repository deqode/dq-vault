"use strict";(self.webpackChunkdq_vault=self.webpackChunkdq_vault||[]).push([[671],{426:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return d},default:function(){return p}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),s=["components"],o={sidebar_position:1},u="Introduction \ud83d\udc47\ufe0f",l={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"Introduction \ud83d\udc47\ufe0f",description:"This vault plugin stores a user's mnemonic inside vault in an encrypted manner. The plugin uses this stored mnemonic to derive a private key based on an HD wallet path provided by the user and signs a raw transaction given as input using that private key. All this process happens inside the vault and the user never knows the mnemonic (unless he has provided it manually) or the private key derived. All he needs to do is give a raw transaction as input and the vault returns a signed transaction. A particular user is identified in the vault using a UUID generated when the user is initially registered in the vault.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/intro.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"installation",permalink:"/docs/getting-started/installation"}},d=[],c={toc:d};function p(e){var t=e.components,o=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"introduction-\ufe0f"},"Introduction \ud83d\udc47\ufe0f"),(0,r.kt)("p",null,"This vault plugin stores a user's mnemonic inside vault in an encrypted manner. The plugin uses this stored mnemonic to derive a private key based on an HD wallet path provided by the user and signs a raw transaction given as input using that private key. All this process happens inside the vault and the user never knows the mnemonic (unless he has provided it manually) or the private key derived. All he needs to do is give a raw transaction as input and the vault returns a signed transaction. A particular user is identified in the vault using a UUID generated when the user is initially registered in the vault."),(0,r.kt)("p",null,"There will be two roles communicating with vault:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Admin"),": The one who sets up the vault. "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Application Server"),": The one who uses vault to read and update data.")),(0,r.kt)("p",null,"This documentation guides you through two processes:-"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"How to set up the vault server (",(0,r.kt)("strong",{parentName:"li"},"For Admin"),")"),(0,r.kt)("li",{parentName:"ol"},"How to use vault to register a user and create a signature on demand (",(0,r.kt)("strong",{parentName:"li"},"for application server"),")")),(0,r.kt)("p",null,"The application server can communicate with a vault server using API requests/calls. Both CLI commands and API call methods have been included in this guide."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Docusaurus",src:n(8653).Z})),(0,r.kt)("h1",{id:"features-\ufe0f"},"Features \ud83d\udc4c\ufe0f"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Manage Secrets and Protect Sensitive Data of blockchain"),(0,r.kt)("li",{parentName:"ul"},"Data Encryption"),(0,r.kt)("li",{parentName:"ul"},"User-based access"),(0,r.kt)("li",{parentName:"ul"},"API-driven"),(0,r.kt)("li",{parentName:"ul"},"Open Source"),(0,r.kt)("li",{parentName:"ul"},"Extend and integrate")))}p.isMDXComponent=!0},8653:function(e,t,n){t.Z=n.p+"assets/images/vault-dq-192x192-202df720d6d8d239d0fbf4cdc208c1c8.png"}}]);