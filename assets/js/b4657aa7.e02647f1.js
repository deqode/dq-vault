"use strict";(self.webpackChunkdq_vault=self.webpackChunkdq_vault||[]).push([[27],{3:function(e,a,n){n.r(a),n.d(a,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return o}});var t=n(7462),d=n(3366),i=(n(7294),n(3905)),r=["components"],l={},s=void 0,p={unversionedId:"guides/plugin-usage",id:"guides/plugin-usage",isDocsHomePage:!1,title:"plugin-usage",description:"The following part contains both cURL requests and CLI commands to communicate with vault server. If you have used docker for vault setup, then use cURL requests.",source:"@site/docs/guides/plugin-usage.md",sourceDirName:"guides",slug:"/guides/plugin-usage",permalink:"/docs/guides/plugin-usage",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/guides/plugin-usage.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"configuration",permalink:"/docs/getting-started/configuration"}},c=[{value:"Login as the application server",id:"login-as-the-application-server",children:[]},{value:"Plugin Usage",id:"plugin-usage",children:[{value:"Register user",id:"register-user",children:[]},{value:"Obtain user address and public key",id:"obtain-user-address-and-public-key",children:[]},{value:"Create signature",id:"create-signature",children:[]}]}],u={toc:c};function o(e){var a=e.components,n=(0,d.Z)(e,r);return(0,i.kt)("wrapper",(0,t.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The following part contains both cURL requests and CLI commands to communicate with vault server. If you have used docker for vault setup, then use cURL requests."),(0,i.kt)("h2",{id:"login-as-the-application-server"},"Login as the application server"),(0,i.kt)("p",null,"Log-in into the vault as application server using the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"  $ vault login -method=userpass username=appserver password=secret\n")),(0,i.kt)("p",null,"API call"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'  $ curl \\\n    --request POST \\\n    --data \'{"password": "secret"}\' \\\n    http://127.0.0.1:8200/v1/auth/userpass/login/appserver\n')),(0,i.kt)("p",null,"The command will return a token which will be used to keep the application server authenticated."),(0,i.kt)("h2",{id:"plugin-usage"},"Plugin Usage"),(0,i.kt)("p",null,"Once we are logged in as an application server, we can use our API plugin to store mnemonic of HD wallet keys and also to sign raw transactions using those keys."),(0,i.kt)("h3",{id:"register-user"},"Register user"),(0,i.kt)("p",null,"Registers a user and stores the corresponding user's mnemonic in the vault. The request returns a unique id(UUID) of the user which will be later used to access the user's keys stored in the vault."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Method"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Path"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Produces"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"POST")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"/api/register")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"200 (application/json)"))))),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"username")," ",(0,i.kt)("inlineCode",{parentName:"p"},"(string)")," ",(0,i.kt)("inlineCode",{parentName:"p"},"optional")," - Specifies the user-name of the user being registered.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"mnemonic")," ",(0,i.kt)("inlineCode",{parentName:"p"},"(string)")," ",(0,i.kt)("inlineCode",{parentName:"p"},"optional")," - Specifies the mnemonic to be stored. If not provided, a random mnemonic will be generated and stored.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"passphrase")," ",(0,i.kt)("inlineCode",{parentName:"p"},"(string)")," ",(0,i.kt)("inlineCode",{parentName:"p"},"optional")," - Specifies the passphrase."))),(0,i.kt)("h4",{id:"cli"},"CLI"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"  $ vault write api/register username=user\n\n  Key     Value\n  ---     -----\n  uuid    c3f394de-919d-4a66-a1b3-7686642be430\n")),(0,i.kt)("h4",{id:"api-call"},"API call"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'  $ cat payload.json\n  {\n    "username": "user",\n    "mnemonic": "",\n    "passphrase": ""\n  }\n\n  $ curl \\\n    --header "X-Vault-Token: ..." \\\n    --request POST \\\n    --data @payload.json \\\n    http://127.0.0.1:8200/v1/api/register\n')),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("strong",{parentName:"p"},"The X-Vault-Token being passed in the header is the token received when the application server logged in. For API calls, the token has to be always passed in the header for authentication.")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'  Response:\n\n  {\n    "request_id":"03cf1ec0-dbd3-9ce8-1663-067e91d680ab",\n    "lease_id":"",\n    "renewable":false,"lease_duration":0,\n    "data":{\n      "uuid":"9af93fcc-c41f-4c30-828f-c4b774573205"\n      },\n    "wrap_info":null,\n    "warnings":null,\n    "auth":null\n  }\n')),(0,i.kt)("h3",{id:"obtain-user-address-and-public-key"},"Obtain user address and public key"),(0,i.kt)("p",null,"Once a user is registered, we can obtain the address and public key of that corresponding user."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Method"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Path"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Produces"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"POST")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"/api/address")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"200 (application/json)"))))),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"uuid")," ",(0,i.kt)("inlineCode",{parentName:"p"},"(string)")," ",(0,i.kt)("inlineCode",{parentName:"p"},"required")," - Specifies the uuid of the user who will sign a transaction.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"path")," ",(0,i.kt)("inlineCode",{parentName:"p"},"(string)")," ",(0,i.kt)("inlineCode",{parentName:"p"},"required")," - Specifies the HD-wallet path.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"coinType")," ",(0,i.kt)("inlineCode",{parentName:"p"},"(uint16)")," ",(0,i.kt)("inlineCode",{parentName:"p"},"required")," - Specifies the coin-type Value of the coin to be used."))),(0,i.kt)("h4",{id:"cointype"},"coinType"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  - Bitcoin:0\n  - Bitcoin Testnet:1\n  - Ethereum:60\n")),(0,i.kt)("h4",{id:"cli-1"},"CLI"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'  $ vault write api/address uuid="214b8190-f9f5-4cf8-a4f1-3874ed5b05d0" path="m/44\'/0\'/0\'/0/0" coinType=0\n\n  Key          Value\n  ---          -----\n  address      1Ax1vX6dASU35gqyPDzX16np4rifvm8oF2\n  publicKey    030df204bde019cbbe79bec99aecfacd3c5f321f404d2df47b42573c987393df80\n  uuid         214b8190-f9f5-4cf8-a4f1-3874ed5b05d0\n')),(0,i.kt)("h4",{id:"api-call-1"},"API call"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'  $ cat payload.json\n  {\n    "uuid": "9af93fcc-c41f-4c30-828f-c4b774573205",\n    "path": "m/44\'/0\'/0\'/0/0",\n    "coinType": 0\n  }\n\n  $ curl \\\n    --header "X-Vault-Token: ..." \\\n    --request POST \\\n    --data @payload.json \\\n    http://127.0.0.1:8200/v1/api/address\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'  Response:\n\n  {\n    "request_id": "a98b3299-9b03-e730-eae4-6a0f727816aa",\n    "lease_id": "",\n    "renewable": false,\n    "lease_duration": 0,\n    "data": {\n        "address": "1Ax1vX6dASU35gqyPDzX16np4rifvm8oF2",\n        "publicKey": "030df204bde019cbbe79bec99aecfacd3c5f321f404d2df47b42573c987393df80",\n        "uuid": "214b8190-f9f5-4cf8-a4f1-3874ed5b05d0"\n    },\n    "wrap_info": null,\n    "warnings": null,\n    "auth": null\n  }\n')),(0,i.kt)("h3",{id:"create-signature"},"Create signature"),(0,i.kt)("p",null,"Once a user is registered, we can now sign raw transactions just by using the user's UUID(which accesses the stored keys). As of now Bitcoin, Bitcoin Testnet and Ethereum transactions are supported."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Method"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Path"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Produces"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"POST")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"/api/signature")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"200 (application/json)"))))),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"uuid")," ",(0,i.kt)("inlineCode",{parentName:"p"},"(string)")," ",(0,i.kt)("inlineCode",{parentName:"p"},"required")," - Specifies the uuid of the user who will sign a transaction.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"path")," ",(0,i.kt)("inlineCode",{parentName:"p"},"(string)")," ",(0,i.kt)("inlineCode",{parentName:"p"},"required")," - Specifies the HD-wallet path.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"coinType")," ",(0,i.kt)("inlineCode",{parentName:"p"},"(uint16)")," ",(0,i.kt)("inlineCode",{parentName:"p"},"required")," - Specifies the coin-type Value of the coin to be used.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"payload")," ",(0,i.kt)("inlineCode",{parentName:"p"},"(string)")," ",(0,i.kt)("inlineCode",{parentName:"p"},"required")," - Contains the raw transaction to be signed in JSON format."))),(0,i.kt)("h4",{id:"cointype-1"},"coinType"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  - Bitcoin:0\n  - Bitcoin Testnet:1\n  - Ethereum:60\n  - Bitshares:240\n")),(0,i.kt)("h4",{id:"payload"},"Payload"),(0,i.kt)("p",null,"Since payload contains the raw transaction, it's structure differs for Bitcoin and ethereum. For, Bitshares, however only the transaction digest is used to generate the signatures."),(0,i.kt)("h5",{id:"bitcoin"},"Bitcoin"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  {\n    inputs: [] of {txhash: string, vout: uint32}\n    outputs: [] of {address: string, amount: int 64}\n  }\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"txhash refers to the txid containing the UTXO and vout points to the index of that UTXO."),(0,i.kt)("li",{parentName:"ul"},"address refers to the payee address and amount refers to the amount of BTC you want to send.")),(0,i.kt)("p",null,"Example payload:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'  {\n    "inputs":[{\n        "txhash":"81b4c832d70cb56ff957589752eb412a4cab78a25a8fc52d6a09e5bd4404d48a",\n        "vout":0\n      },{\n          "txhash":"9dd5264b09bd4aebc1d74b776e6669ba3f0e381ef2992c9434e4d0bee3068edb",\n          "vout":0\n        }],\n\n    "outputs":[{\n        "address":"1KKKK6N21XKo48zWKuQKXdvSsCf95ibHFa",\n        "amount":91234\n      },{\n          "address":"1HPvK7CAYeHzCdBMBkuXeEsXdvX64yMkoE",\n          "amount":91234\n        }]\n  }\n')),(0,i.kt)("h5",{id:"ethereum"},"Ethereum"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  {\n    Nonce : uint64\n    Value: uint64\n    GasLimit: uint64\n    GasPrice: uint64\n    To: string\n    Data: string\n    ChainID: int64\n  }\n")),(0,i.kt)("p",null,"Example payload:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'  {\n    "nonce":0,\n    "value":1000000000,\n    "gasLimit":21000,\n    "gasPrice":30000000000,\n    "to":"0x4592d8f8d7b001e72cb26a73e4fa1806a51ac79d",\n    "data":"",\n    "chainId":1\n  }\n')),(0,i.kt)("p",null,"The request finally returns a signature of a raw transaction which was signed inside vault using the following things:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"uuid of the user proposing the transaction."),(0,i.kt)("li",{parentName:"ul"},"Stored mnemonic corresponding to the provided uuid."),(0,i.kt)("li",{parentName:"ul"},"HD wallet path.")),(0,i.kt)("h5",{id:"bitshares"},"Bitshares"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"  {\n    transactionDigest : string\n  }\n")),(0,i.kt)("p",null,"Example payload:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'  {\n    "transactionDigest":"3aef3997194701308d57a65214a7a015d98382ab66a9bc0d655de80842b6bfc5aede09dd6e161ca9095c0105d1d8070000000000001111050007616e6b69743131010000000001021500e918e7ca8c63e40472c9a2ab28665d06a41e78d034ee1b2ff2b3635d02e5010000010000000001021500e918e7ca8c63e40472c9a2ab28665d06a41e78d034ee1b2ff2b3635d02e5010000021500e918e7ca8c63e40472c9a2ab28665d06a41e78d034ee1b2ff2b3635d02e5050000000000000000"\n  }\n')),(0,i.kt)("p",null,"The request finally returns a signature of a raw transaction which was signed inside vault using the following things:"),(0,i.kt)("h4",{id:"cli-2"},"CLI"),(0,i.kt)("p",null,"BTC:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'  $ vault write api/signature uuid="c3f394de-919d-4a66-a1b3-7686642be430" \\\n    path="m/0/0" \\\n    payload="{\\"inputs\\":[{\\"txhash\\":\\"b31695ff693b196d41600266d82bdf1092a4a55be608f41e1bde985408b16774\\",\\"vout\\":0}],\\"outputs\\":[{\\"address\\":\\"3BGgKxAsqoFyouTgUJGW3TAJdvYrk43Jr5\\",\\"amount\\":91234}]}" \\\n    coinType=0\n\n  Key          Value\n  ---          -----\n  signature    01000000017467b1085498de1b1ef408e65ba5a49210df2bd8660260416d193b69ff9516b3000000006a47304402200cd2c06db98cb1a71cbb7558506815d20933e4451ffda2760971b5e477c7766902206dc6aa33f3c05305a992fcf3f19d58953b55398f8052a0ae1f061ad8b38b3135012103e1a150d41f5d6871da8310e5ea8226f105716639483e3e2c79981d65392ce499ffffffff01626401000000000017a9146916ea9f8135de454ecb1c22ade111ff48fb7c9f8700000000\n')),(0,i.kt)("p",null,"BTC testnet:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'  $ vault write api/signature uuid="c3f394de-919d-4a66-a1b3-7686642be430" \\\n    path="m/0/0" \\\n    payload="{\\"inputs\\":[{\\"txhash\\":\\"b31695ff693b196d41600266d82bdf1092a4a55be608f41e1bde985408b16774\\",\\"vout\\":0}],\\"outputs\\":[{\\"address\\":\\"3BGgKxAsqoFyouTgUJGW3TAJdvYrk43Jr5\\",\\"amount\\":91234}]}" \\\n    coinType=1\n\n  Key          Value\n  ---          -----\n  signature    01000000017467b1085498de1b1ef408e65ba5a49210df2bd8660260416d193b69ff9516b3000000006b483045022100d3323c41f117c4c1ef3e52fde37bc01b24fc6090de8dbeb6918a494bfea21ef602206ee496d9933eb5a9246808b96cbad4c8b84b9b5ad7a66afe045acc72f033e2d6012103c023b44933371f7d208bc0ff8a65505d67bf8750de913d21af8d194585ac7af0ffffffff01626401000000000017a9146916ea9f8135de454ecb1c22ade111ff48fb7c9f8700000000\n')),(0,i.kt)("p",null,"ETH:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'  $ vault write api/signature uuid="c3f394de-919d-4a66-a1b3-7686642be430" \\\n  path="m/0/0" \\\n  payload="{\\"nonce\\":0,\\"value\\":1000000000,\\"gasLimit\\":21000,\\"gasPrice\\":30000000000,\\"to\\":\\"0x4592d8f8d7b001e72cb26a73e4fa1806a51ac79d\\",\\"data\\":\\"\\",\\"chainId\\":1}" \\\n  coinType=60\n\n  Key          Value\n  ---          -----\n  signature    0xf868808506fc23ac00825208944592d8f8d7b001e72cb26a73e4fa1806a51ac79d843b9aca008026a08a465e9d1c707d02f72360ab21d1a1be5faf84671413e7df0402e954a666cd79a04ab6481295d13f31fc4265888e8bd9962e200062889f162b320caf4c697f96c4\n')),(0,i.kt)("p",null,"BTS:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'  $ vault write api/signature uuid="bgnkf4dgouhsb9enplqg" \\\n  path="" \\\n  payload="{\\"transactionDigest\\":\\"3aef3997194701308d57a65214a7a015d98382ab66a9bc0d655de80842b6bfc5aede09dd6e161ca9095c0105d1d8070000000000001111050007616e6b69743131010000000001021500e918e7ca8c63e40472c9a2ab28665d06a41e78d034ee1b2ff2b3635d02e5010000010000000001021500e918e7ca8c63e40472c9a2ab28665d06a41e78d034ee1b2ff2b3635d02e5010000021500e918e7ca8c63e40472c9a2ab28665d06a41e78d034ee1b2ff2b3635d02e5050000000000000000\\"}" \\\n  coinType=240\n\n  Key          Value\n  ---          -----\n  signature    1f2e6532af53fa5703780c31b94ff99ba375a8f131e9137c53d42e5512ab86ba80180ba87cfc519aba5ec80c00070fa1bf32c47cf4b594766c651fdacdeb59e18b\n')),(0,i.kt)("h4",{id:"api-call-2"},"API call"),(0,i.kt)("p",null,"BTC:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'  $ cat payload.json\n  {\n    "uuid": "9af93fcc-c41f-4c30-828f-c4b774573205",\n    "path": "m/0/0",\n    "payload": "{\\"inputs\\":[{\\"txhash\\":\\"b31695ff693b196d41600266d82bdf1092a4a55be608f41e1bde985408b16774\\",\\"vout\\":0}],\\"outputs\\":[{\\"address\\":\\"3BGgKxAsqoFyouTgUJGW3TAJdvYrk43Jr5\\",\\"amount\\":91234}]}",\n    "coinType": 0\n  }\n\n  $ curl \\\n    --header "X-Vault-Token: ..." \\\n    --request POST \\\n    --data @payload.json \\\n    http://127.0.0.1:8200/v1/api/signature\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'  Response:\n\n  {\n    "request_id":"c9f6916d-5985-6320-770b-cc3fb22b0b37",\n    "lease_id":"",\n    "renewable":false,\n    "lease_duration":0,\n    "data":{\n      "signature":"01000000017467b1085498de1b1ef408e65ba5a49210df2bd8660260416d193b69ff9516b3000000006a47304402204355e8a9cd9f2e4cac867c8ab55a63f020404249051385f4170788b35d246d9602201b2ff4bbc7a9dd9eb5ebbfcffeed3de0a9138ca1606d302b407d3e99c092ac1e0121027276b9edee40a02957f237d79536205524c3864d0d351909cdf519adc60de6d4ffffffff01626401000000000017a9146916ea9f8135de454ecb1c22ade111ff48fb7c9f8700000000"\n      },\n    "wrap_info":null,\n    "warnings":null,\n    "auth":null\n  }\n')),(0,i.kt)("p",null,"BTC Testnet:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'  $ cat payload.json\n  {\n    "uuid": "9af93fcc-c41f-4c30-828f-c4b774573205",\n    "path": "m/0/0",\n    "payload": "{\\"inputs\\":[{\\"txhash\\":\\"b31695ff693b196d41600266d82bdf1092a4a55be608f41e1bde985408b16774\\",\\"vout\\":0}],\\"outputs\\":[{\\"address\\":\\"3BGgKxAsqoFyouTgUJGW3TAJdvYrk43Jr5\\",\\"amount\\":91234}]}",\n    "coinType": 1\n  }\n\n  $ curl \\\n    --header "X-Vault-Token: ..." \\\n    --request POST \\\n    --data @payload.json \\\n    http://127.0.0.1:8200/v1/api/signature\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'  Response:\n\n  {\n    "request_id":"c9f6916d-5985-6320-770b-cc3fb22b0b37",\n    "lease_id":"",\n    "renewable":false,\n    "lease_duration":0,\n    "data":{\n      "signature":"01000000017467b1085498de1b1ef408e65ba5a49210df2bd8660260416d193b69ff9516b3000000006b483045022100d3323c41f117c4c1ef3e52fde37bc01b24fc6090de8dbeb6918a494bfea21ef602206ee496d9933eb5a9246808b96cbad4c8b84b9b5ad7a66afe045acc72f033e2d6012103c023b44933371f7d208bc0ff8a65505d67bf8750de913d21af8d194585ac7af0ffffffff01626401000000000017a9146916ea9f8135de454ecb1c22ade111ff48fb7c9f8700000000"\n      },\n    "wrap_info":null,\n    "warnings":null,\n    "auth":null\n  }\n')),(0,i.kt)("p",null,"ETH:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'  $ cat payload.json\n  {\n    "uuid": "9af93fcc-c41f-4c30-828f-c4b774573205",\n    "path": "m/0/0",\n    "payload": "{\\"nonce\\":0,\\"value\\":1000000000,\\"gasLimit\\":21000,\\"gasPrice\\":30000000000,\\"to\\":\\"0x4592d8f8d7b001e72cb26a73e4fa1806a51ac79d\\",\\"data\\":\\"\\",\\"chainId\\":1}",\n    "coinType": 60\n  }\n\n  $ curl \\\n    --header "X-Vault-Token: ..." \\\n    --request POST \\\n    --data @payload.json \\\n    http://127.0.0.1:8200/v1/api/signature\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'  Response:\n\n  {\n    "request_id":"c9f6916d-5985-6320-770b-cc3fb22b0b37",\n    "lease_id":"",\n    "renewable":false,\n    "lease_duration":0,\n    "data":{\n      "signature":"0xf868808506fc23ac00825208944592d8f8d7b001e72cb26a73e4fa1806a51ac79d843b9aca008026a08a465e9d1c707d02f72360ab21d1a1be5faf84671413e7df0402e954a666cd79a04ab6481295d13f31fc4265888e8bd9962e200062889f162b320caf4c697f96c4"\n      },\n    "wrap_info":null,\n    "warnings":null,\n    "auth":null\n  }\n')),(0,i.kt)("p",null,"BTS:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},'  $ cat payload.json\n  {\n    "uuid": "bgnkf4dgouhsb9enplqg,\n    "path": "",\n    "payload": "{\\"transactionDigest\\":\\"3aef3997194701308d57a65214a7a015d98382ab66a9bc0d655de80842b6bfc5aede09dd6e161ca9095c0105d1d8070000000000001111050007616e6b69743131010000000001021500e918e7ca8c63e40472c9a2ab28665d06a41e78d034ee1b2ff2b3635d02e5010000010000000001021500e918e7ca8c63e40472c9a2ab28665d06a41e78d034ee1b2ff2b3635d02e5010000021500e918e7ca8c63e40472c9a2ab28665d06a41e78d034ee1b2ff2b3635d02e5050000000000000000\\"}",\n    "coinType": 240\n  }\n\n  $ curl \\\n    --header "X-Vault-Token: ..." \\\n    --request POST \\\n    --data @payload.json \\\n    http://127.0.0.1:8200/v1/api/signature\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'  Response:\n\n {\n    "request_id": "ee20193d-48bd-1f97-e407-a9f376075cb3",\n    "lease_id": "",\n    "renewable": false,\n    "lease_duration": 0,\n    "data": {\n        "signature": "1f2e6532af53fa5703780c31b94ff99ba375a8f131e9137c53d42e5512ab86ba80180ba87cfc519aba5ec80c00070fa1bf32c47cf4b594766c651fdacdeb59e18b"\n    },\n    "wrap_info": null,\n    "warnings": null,\n    "auth": null\n}\n')),(0,i.kt)("p",null,"cURL requests for all of the above commands can be imported to postman via ",(0,i.kt)("inlineCode",{parentName:"p"},"vault_postman_collection.json"),"."),(0,i.kt)("p",null,"Note: If using postman, replace the existing token with yours in the header section of each request."))}o.isMDXComponent=!0}}]);